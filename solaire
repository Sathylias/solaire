#!/usr/bin/env bash
# shellcheck disable=SC2155
# set -x
# set -eou pipefail
#
# Program: solaire
# Description: Show off an animated wallpaper on your desktop & become grossly incandescent
#
# Author: Maxime Daraiche <maxiscoding@gmail.com>
#
#/ Usage: solaire [OPTIONS]... [ARGUMENTS]...
#/
#/ 
#/ OPTIONS
#/   -h, --help
#/                Print this help message
#/
#/   -d, --delay
#/                Specify a delay in seconds, can be a float value (ex. 0.05)
#/                Default value if not specified is 0.2s
#/   
#/   
#/ EXAMPLES
#/ solaire ~/Pictures/solaire.gif --delay 0.05
#/   
# PREREQUISITES:
#   - Having 'feh' && 'imagemagick' installed on your machine


# Boy, what a very useful wizardry, jolly good !
usage() {
  grep '^#/' "$0" | cut -c4- && exit 0
}

check_requirements() {
  REQUIRED_CMDS=(feh convert)
  local ret=0

  for cmd in "${REQUIRED_CMDS[@]}"; do
    if ! command -v "$cmd" > /dev/null; then
      printf "[INFO] The '%s' command isn't available on your system\n" "$cmd"
      ret=1
    fi
  done
  
  return "$ret"
}

parse_arguments() {
  while [[ "$#" -gt 0 ]]; do
    case "$1" in
      --help|-h)
	usage
	;;
      --delay|-d)
	printf "Setting delay at %s seconds\n" "$2"
        FRAME_DELAY="$2"
	shift 
	shift
	;;
      --no-solaire-bg|-n)
	# TODO: Just like feh, output the last command used to '$HOME/.solairebg'
	# NO_SOLAIRE_BG=true
	# shift
	;;
      *)
	# TODO: Argument should be an image file, verify if it's valid
	GIF_IMG="$1"
	shift
	;;
    esac
  done
}

make_cachedir() {
  if [[ "$(mkdir --parent "$1" > /dev/null)" -ne 0 ]]; then
    printf "[Error] Could not create cache directory..\n" && exit 1
  fi
}

main() {

  # Abort and print the usage (help) if no arguments were passed
  [[ "$#" -eq 0 ]] && usage

  # Check if the required commands are available
  check_requirements 
    
  # If requirements are not satisfied, abort the program
  # shellcheck disable=SC2181
  [[ "$?" -ne 0 ]] && exit 1

  parse_arguments "$@"

  local frame_basename=$(basename "$GIF_IMG" | cut -d '.' -f1)
  local cachedir="$HOME/.cache/solaire/$frame_basename"

  # Verify if cache directory exist, create it & convert the image if otherwise 
  if ! [[ -d "$cachedir" ]]; then
    make_cachedir "$cachedir"
    convert -coalesce "$GIF_IMG" "$cachedir/$frame_basename.png"
  fi
    
  local frame_count=$(find "$cachedir" -mindepth 1 -maxdepth 1 | wc -l)
  #local frame_count=$(ls "$cachedir" | wc -l)

  printf "Number of frames: %d\n" "$frame_count" 
  
  local idx=0
  
  while true; do

    feh --no-fehbg --bg-scale "$cachedir/$frame_basename-$idx.png"
    sleep "${FRAME_DELAY:-0.2}"

    if [[ "$idx" -eq $((frame_count - 1)) ]]; then
      idx=0 
    else
      idx=$((idx + 1))
    fi

  done
}

main "$@"
